# Step 1: Import required libraries
from flask import Flask, request, jsonify
import openai
import os
from dotenv import load_dotenv

# Step 2: Load environment variables and set up Flask
load_dotenv()
openai.api_key = os.getenv('OPENAI_API_KEY')
app = Flask(__name__)

# Step 3: Define a route to handle mood/question input from the user
@app.route('/analyze-mood', methods=['POST'])
def analyze_mood():
    # Get the data sent from the client (Flutter app)
    data = request.get_json()
    user_input = data.get('message', '')

    # Use OpenAI to analyze the user's mood/question and suggest a topic/keyword
    try:
        prompt = f"Suggest a single relevant Quran topic or keyword (like comfort, patience, hope, gratitude, forgiveness, etc.) for the following user mood or question: '{user_input}'. Only return the topic/keyword."
        completion = openai.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are a helpful assistant for a Quran app."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=10,
            temperature=0.2
        )
        topic = completion.choices[0].message.content.strip()
        response = {
            'topic': topic,
            'note': 'Topic generated by OpenAI based on user input.'
        }
    except Exception as e:
        response = {
            'topic': None,
            'note': f'Error: {str(e)}'
        }
    return jsonify(response)

# Step 4: Run the Flask app (for local development)
if __name__ == '__main__':
    app.run(debug=True, port=5000)